loops in php hebben hetzelfde nut als loops in andere talen, een stuk code meerdere keren runnen, om bijvoorbeeld meerdere condities te checken en dan iets wel of niet te doen.

//WHILE
while loops runnen zolang de gespecifieerde conditie true is en kappen af als t false wordt

$var = 3;
while ($var <= 5){
    print ("print dit uit zolang de loop duurt");
    $var++ //$var+1
} //draait de loops 3 keer, gedurende $var =  3 $var = 4 en voor $var = 5  

    

//DO...WHILE
do ... while loops is hetzelfde als een while met als uitzondering dat de loop zowiezo eenmalig runt en dan pas de gespecifieerde conditie checkt.

$var = 3
do{ 
    print ("print dit uit zolang de loop duurt");
$var++; //$var+1
} while ($var <=5);
//print eerst de print en dan loopt de code nog twee keer. als $var gelijk meer dan 5 was had ie alsnog op zn minst eenmalig geprint en dan niet geloopt.



//FOR
for loops runt voor het aantal keer dat je zelf aanduidt.  

( $loops = 5;
    for ($i=0, i< $loops, $i++;) {
        print ("print 5 keer");

    } )
    //runt de loop totdat $i de waarde van $loops heeft loops 5 keer



//FOREACH
foreach... ken ik niet. 
// w3schools: loops through a block of code for each element in an array.


$colors = array("red","green","blue","yellow");
foreach ($colors as $value) {
    echo ("$value <br>");
}
//dit converteert de array element naar value en print dan de value uit, voor de hele array


W3 opdrachten:
ex1:
while  {
    
}

ex2: 
do

while

ex3:
for ($i++)

ex4:
foreach (as)